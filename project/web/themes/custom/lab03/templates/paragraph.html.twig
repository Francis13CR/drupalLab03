{#
/**
 * @file
 * Default theme implementation to display a paragraph.
 *
 * Available variables:
 * - paragraph: Full paragraph entity.
 *   Only method names starting with "get", "has", or "is" and a few common
 *   methods such as "id", "label", and "bundle" are available. For example:
 *   - paragraph.getCreatedTime() will return the paragraph creation timestamp.
 *   - paragraph.id(): The paragraph ID.
 *   - paragraph.bundle(): The type of the paragraph, for example, "image" or "text".
 *   - paragraph.getOwnerId(): The user ID of the paragraph author.
 *   See Drupal\paragraphs\Entity\Paragraph for a full list of public properties
 *   and methods for the paragraph object.
 * - content: All paragraph items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - paragraphs: The current template type (also known as a "theming hook").
 *   - paragraphs--type-[type]: The current paragraphs type. For example, if the paragraph is an
 *     "Image" it would result in "paragraphs--type--image". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - paragraphs--view-mode--[view_mode]: The View Mode of the paragraph; for example, a
 *     preview would result in: "paragraphs--view-mode--preview", and
 *     default: "paragraphs--view-mode--default".
 * - view_mode: View mode; for example, "preview" or "full".
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_paragraph()
 *
 * @ingroup themeable
 */
#}
{%
  set classes = [
    'paragraph', 
    'paragraph--type--' ~ paragraph.bundle|clean_class,
    view_mode ? 'paragraph--view-mode--' ~ view_mode|clean_class,
    not paragraph.isPublished() ? 'paragraph--unpublished'
  ]
%}

{% block paragraph %}
  {% set inline_styles = '' %}
  {% if content.field_background_color %}
    {% set inline_styles = 'background-color: ' ~ content.field_background_color[0]['#markup'] ~ ';' %}
  {% endif %}
  <div{{ attributes.addClass(classes) }} style="{{ inline_styles }}">
    {% block content %}
      {% if paragraph.bundle == '_title_text_cta' %}
        <div class="row pt-1">
          <div class="col-md-8 ps-5 text-justify">
             <h3 class="pb-0 mb-0">{{content.field_title}}<h3>
             <p class="font11"> {{content.field_text[0]['#text'] | striptags }} </p> 
          </div>
          <div class="col-md-4 pt-4 mb-3 text-center buttonsPara ">
            <a  href="{{content.field_link[0]['#url']}}" class="btn btn-outline-dark btn-lg">Ver mas..</a>
          </div>
        </div>
      {% elseif paragraph.bundle == 'contenido_en_dos_columnas' %}
          <div class="row">
            <div class="col-md-6 ">
              <div class="h-50">{{ content.field_columna_izquierda }}</div>
            </div>
            <div class="col-md-6">
              <div>{{ content.field_columna_derecha }}</div>
            </div>
          </div>
          {# {{ dump(content.field_columna_derecha[0]['#paragraph'].get('field_text').getValue()[0]['value']) }} #}
      {% else %}
          {{ content }}
      {% endif %}
     
    {% endblock %}
  </div>
{% endblock paragraph %}
